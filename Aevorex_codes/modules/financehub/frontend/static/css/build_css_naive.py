#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Naive CSS concatenation builder for Aevorex FinanceHub.
-----------------------------------------------------------------
Purpose
    ‚Ä¢ Fast, dependency-free way to concatenate every CSS file under
      the ./ static/css tree into a single bundle *without* any extra
      processing (purge / @apply expansion / duplicate detection).
    ‚Ä¢ Intended only for debugging / regression hunts where we want to
      be 100 % sure NOTHING is stripped out by the smart builder.

Usage
    $ cd modules/financehub/frontend/static/css
    $ python3 build_css_naive.py

Output
    Generates / overwrites   main_combined_financehub.css

Note
    This script deliberately keeps the implementation minimal.  All
    validations & optimisations are handled by build_css.py ‚Äì use that
    one for production artefacts.
"""
from __future__ import annotations

import os
from pathlib import Path
from datetime import datetime

CSS_DIR = Path('.')  # assume we are executed inside the css folder
OUTPUT_FILE = Path('main_combined_financehub.css')

# Files that should never be re-bundled (outputs / backups)
EXCLUDE_NAMES = {
    'main_combined_financehub.css',
    'main_financehub.css',
    'main_combined_financehub.min.css',
}

# Directories to concatenate in lexical order (01-base ‚Üí 07-vendor)
PRIORITY_PREFIXES = [
    '01-base/',
    '02-shared/',
    '03-layout/',
    '04-components/',
    '05-themes/',
    '06-pages/',
    '07-vendor/',
]


def scan_css_files() -> list[Path]:
    """Return all .css files respecting PRIORITY_PREFIXES order."""
    files: list[Path] = []
    for prefix in PRIORITY_PREFIXES:
        base_dir = CSS_DIR / prefix
        if not base_dir.exists():
            continue
        for file in sorted(base_dir.rglob('*.css')):
            if file.name in EXCLUDE_NAMES:
                continue
            files.append(file)
    return files


def build_bundle() -> None:
    files = scan_css_files()
    if not files:
        print('‚ùå  No CSS files found ‚Äì make sure you run inside static/css')
        return

    print(f'üõ†Ô∏è   Concatenating {len(files)} CSS files ‚Ä¶')
    lines_out: list[str] = []

    banner = (
        '/*\n'
        '============================================================\n'
        ' AEVOREX FINANCEHUB ‚Äì NAIVE CSS BUNDLE (DEBUG ONLY)\n'
        f' Generated: {datetime.utcnow().isoformat(timespec="seconds")} UTC\n'
        '============================================================\n'
        ' This file is generated by build_css_naive.py.\n'
        ' DO NOT edit manually ‚Äì your changes will be overwritten.\n'
        '============================================================\n'
        '*/\n\n'
    )
    lines_out.append(banner)

    for css_file in files:
        rel = css_file.relative_to(CSS_DIR)
        lines_out.append(f'/* === {rel} === */\n')
        with open(css_file, 'r', encoding='utf-8') as f:
            lines_out.append(f.read())
            lines_out.append('\n')

    OUTPUT_FILE.write_text('\n'.join(lines_out), encoding='utf-8')

    size_kb = OUTPUT_FILE.stat().st_size / 1024
    print(f'üéâ  Bundle created ‚Üí {OUTPUT_FILE}  ({size_kb:.1f} KB)')


if __name__ == '__main__':
    build_bundle() 