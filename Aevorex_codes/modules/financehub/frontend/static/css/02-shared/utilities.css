.max-h-full {
  max-height: 100%;
}
.max-h-screen {
  max-height: 100vh;
}
/* === Position Utilities === */ .static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.inset-0 {
  top: 0; right: 0; bottom: 0; left: 0;
}
.top-0 {
  top: 0;
}
.right-0 {
  right: 0;
}
.bottom-0 {
  bottom: 0;
}
.left-0 {
  left: 0;
}
/* === Z-Index Utilities === */ .z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.z-auto {
  z-index: auto;
}
/* === Background Utilities === */ .bg-transparent {
  background-color: transparent;
}
.bg-primary {
  background-color: var(--bg-primary);
}
.bg-secondary {
  background-color: var(--bg-secondary);
}
.bg-tertiary {
  background-color: var(--bg-tertiary);
}
.bg-card {
  background-color: var(--bg-card);
}
.bg-accent {
  background-color: var(--accent-primary);
}
.bg-glass {
  background: var(--glass-background);
  backdrop-filter: blur(var(--blur-glass));
}
.bg-gradient-primary {
  background: var(--gradient-primary);
}
.bg-gradient-surface {
  background: var(--gradient-surface);
}
/* === Border Utilities === */ .border-0 {
  border-width: 0;
}
.border {
  border-width: 1px;
}
.border-2 {
  border-width: 2px;
}
.border-t {
  border-top-width: 1px;
}
.border-r {
  border-right-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-l {
  border-left-width: 1px;
}
.border-primary {
  border-color: var(--border-primary);
}
.border-secondary {
  border-color: var(--border-secondary);
}
.border-accent {
  border-color: var(--accent-primary);
}
.border-transparent {
  border-color: transparent;
}
.rounded-none {
  font-weight: 300;
}
.font-normal {
  font-weight: 400;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.font-bold {
  font-weight: 700;
}
.text-primary {
  color: var(--text-primary);
}
.text-secondary {
  color: var(--text-secondary);
}
.text-tertiary {
  color: var(--text-tertiary);
}
.text-accent {
  color: var(--accent-primary);
}
.text-success {
  color: var(--color-success);
}
.text-warning {
  color: var(--color-warning);
}
.text-error {
  color: var(--color-error);
}
.transition-all {
  transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.transition-colors {
  transition: color, background-color, border-color 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.transition-opacity {
  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.transition-shadow {
  transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.transition-transform {
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
}
.transition-fast {
  transition-duration: 100ms;
}
.transition-slow {
  transition-duration: 300ms;
}
.ease-linear {
  transition-timing-function: linear;
}
.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}
.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
/* === Overflow Utilities === */ .overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-visible {
  overflow: visible;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-x-scroll {
  overflow-x: scroll;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-y-hidden {
  overflow-y: hidden;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
/* === Cursor Utilities === */ .cursor-auto {
  cursor: auto;
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.cursor-wait {
  cursor: wait;
}
.cursor-text {
  cursor: text;
}
.cursor-move {
  cursor: move;
}
.cursor-not-allowed {
  cursor: not-allowed;
}
/* === User Select Utilities === */ .select-none {
  user-select: none;
}
.select-text {
  user-select: text;
}
.select-all {
  user-select: all;
}
.select-auto {
  user-select: auto;
}
/* === Pointer Events Utilities === */ .pointer-events-none {
  pointer-events: none;
}
.pointer-events-auto {
  pointer-events: auto;
}
.bg-bullish {
  background-color: rgba(var(--color-success-rgb), 0.1);
}
.bg-bearish {
  background-color: rgba(var(--color-error-rgb), 0.1);
}
.bg-neutral-market {
  background-color: var(--bg-tertiary);
}
/* === Premium Components === */ .premium-card {
  background: var(--bg-card);
  border: 1px solid var(--border-primary);
  border-radius: var(--fh-radius-lg);
  box-shadow: var(--fh-shadow-sm);
  transition: all 0.2s ease;
}
.premium-card:hover {
  box-shadow: var(--fh-shadow-premium);
  transform: translateY(-2px);
}
/* === Loading States === */ .skeleton {
  background-color: var(--bg-secondary);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
  border-radius: var(--fh-radius-sm);
}

@keyframes shimmer {
0% {
  background-position: -200% 0;
}
100% {
  background-position: 200% 0;
}
} .skeleton-line {
  height: 1rem;
  margin-bottom: var(--fh-space-2);
  border-radius: var(--fh-radius-sm);
}
.skeleton-line.short {
  width: 60%;
}
.skeleton-line.medium {
  width: 80%;
}
.skeleton-line.long {
  width: 100%;
}
/* === Safe Area Utilities (for mobile) === */ .safe-top {
  padding-top: env(safe-area-inset-top);
}
.safe-right {
  padding-right: env(safe-area-inset-right);
}
.safe-bottom {
  padding-bottom: env(safe-area-inset-bottom);
}
.safe-left {
  padding-left: env(safe-area-inset-left);
}
.safe-x {
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}
.safe-y {
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
}
.safe-all {
  padding-top: env(safe-area-inset-top);
  padding-right: env(safe-area-inset-right);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
}

/* -------------------------------------------------------------------------
   Legacy Tailwind-compatibility utilities (migrated from 00-utilities-fallback.css)
   These were previously provided only via the fallback sheet; they are now
   part of the canonical 02-shared/utilities.css so the fallback sheet can be
   removed without regressions.                                                   
   ------------------------------------------------------------------------- */
/* --- Flexbox & Grid Layout --- */
.flex { display: flex; }
.inline-flex { display: inline-flex; }
.items-center { align-items: center; }
.items-start { align-items: flex-start; }
.items-end { align-items: flex-end; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
.justify-start { justify-content: flex-start; }
.justify-end { justify-content: flex-end; }
.flex-col { flex-direction: column; }
.flex-row { flex-direction: row; }
.grid { display: grid; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }

/* --- Gap utilities (rem values synced with spacing scale) --- */
.gap-1 { gap: var(--fh-space-1, 0.25rem); }
.gap-2 { gap: var(--fh-space-2, 0.5rem); }
.gap-4 { gap: var(--fh-space-4, 1rem); }
.gap-6 { gap: var(--fh-space-6, 1.5rem); }

/* --- Spacing (Padding / Margin) --- */
.p-1 { padding: var(--fh-space-1, 0.25rem); }
.p-2 { padding: var(--fh-space-2, 0.5rem); }
.p-4 { padding: var(--fh-space-4, 1rem); }
.p-6 { padding: var(--fh-space-6, 1.5rem); }
.px-2 { padding-left: var(--fh-space-2, 0.5rem); padding-right: var(--fh-space-2, 0.5rem); }
.px-4 { padding-left: var(--fh-space-4, 1rem); padding-right: var(--fh-space-4, 1rem); }
.py-2 { padding-top: var(--fh-space-2, 0.5rem); padding-bottom: var(--fh-space-2, 0.5rem); }
.mt-2 { margin-top: var(--fh-space-2, 0.5rem); }
.mt-4 { margin-top: var(--fh-space-4, 1rem); }
.mb-2 { margin-bottom: var(--fh-space-2, 0.5rem); }
.mb-4 { margin-bottom: var(--fh-space-4, 1rem); }

/* --- Sizing --- */
.w-full { width: 100%; }
.h-full { height: 100%; }

/* --- Typography --- */
.text-sm { font-size: var(--fh-font-size-sm, 0.875rem); }
.text-base { font-size: var(--fh-font-size-base, 1rem); }
.text-lg { font-size: var(--fh-font-size-lg, 1.125rem); }
.font-medium { font-weight: 500; }
.font-bold { font-weight: 700; }
.text-center { text-align: center; }
.text-left { text-align: left; }

/* --- Rounded corners & borders --- */
.rounded { border-radius: var(--fh-radius-sm, 0.25rem); }
.rounded-md { border-radius: var(--fh-radius-md, 0.375rem); }
.rounded-lg { border-radius: var(--fh-radius-lg, 0.5rem); }

/* --- Hover background helpers using theme tokens --- */
.hover\:bg-primary:hover { background-color: var(--bg-primary); }
.hover\:bg-secondary:hover { background-color: var(--bg-secondary); }

/* --- Z-index helpers --- */
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }

/* --- Opacity helpers --- */
.opacity-0 { opacity: 0; }
.opacity-50 { opacity: 0.5; }
.opacity-100 { opacity: 1; }

/* --- Visibility --- */
.hidden { display: none !important; }

/* --- Absolute / Relative positioning shortcuts --- */
.absolute { position: absolute; }
.relative { position: relative; }
.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }

/* --- Skeleton loader (lightweight variant) --- */
.skeleton {
  position: relative;
  overflow: hidden;
  background-color: var(--bg-secondary);
}
.skeleton::after {
  content: "";
  position: absolute;
  top: 0;
  left: -150%;
  width: 50%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.15), transparent);
  animation: shimmer 1.2s infinite;
}
@keyframes shimmer {
  0% { left: -150%; }
  50% { left: 100%; }
  100% { left: 100%; }
}

/* ------------------------------------------------------------------------- */
